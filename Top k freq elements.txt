static bool comp(pair<string,int> v1,pair<string,int> v2)
    {
        if(v1.second > v2.second) return true;
        else if(v1.second == v2.second)
        {
            return v1.first<v2.first;
        }
        return false;
    }
    vector<string> topKFrequent(vector<string>& words, int k) {
       unordered_map<string,int> m;
        vector<string> res;
        for(int i=0;i<words.size();i++)
            m[words[i]]++;
        vector<pair<string,int>> vec;
        for(int i=0;i<words.size();i++)
        {
            if(m[words[i]]>0)
            {
                vec.push_back(make_pair(words[i],m[words[i]]));
                m[words[i]]=0;
            }
        }
        sort(vec.begin(),vec.end(),comp);
        
       for(int i=0;i<k;i++)
           res.push_back(vec[i].first);
        return res;
    }
};