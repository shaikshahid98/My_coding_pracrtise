int Solution::findMedian(vector<vector<int> > &A) {
    int r=A.size(),c=A[0].size();
    int min1=INT_MAX,max1=INT_MIN;
    for(int i=0;i<r;i++)
    {
        if(min1>A[i][0]) min1=A[i][0];
        if(max1<A[i][c-1]) max1=A[i][c-1];
    }
    int desired = (r*c+1)/2;
    while(min1<max1)
    {
        int mid= min1+ (max1-min1)/2;
        int pl=0;
        for(int i=0;i<r;i++)
            pl += upper_bound(A[i].begin(),A[i].end(),mid)-A[i].begin();
        if(pl<desired)
            min1=mid+1;
        else max1=mid;
    }
    return max1;
}
