vector<int> Solution::searchRange(const vector<int> &A, int B) {
    int n=A.size(),l=0,h=n-1,mid,fl=0;
    while(l<h)
    {
        mid=(l+h)/2;
        if(A[mid]<B) l=mid+1;
        else h=mid;
    }
    if(A[l]!=B) return {-1,-1};
    vector<int> res={l,-1};
    l++,h=n-1;
    while(l<h)
    {
        mid=(l+h)/2+1;
        if(A[mid]>B) h=mid-1;
        else l=mid;
    }
    res[1]=h;
    return res;
    
    
    
}
---------------------------------------------------------------------------------
vector<int> Solution::searchRange(const vector<int> &A, int B) {
    int n=A.size(),l=0,h=n-1,mid,fl=0;
    while(l<=h)
    {
        mid= (l+h)/2;
        if(A[mid]==B)
            {
                fl=1;
                break;
            }
        else if(A[mid]>B)
            h=mid-1;
        else l=mid+1;
    }
    if(fl==0) return {-1,-1};
    int lf=mid,rf=mid;
    while(lf>0 && A[lf-1]==B) lf--;
    while(rf<n-1 && A[rf+1]==B) rf++;
    return {lf,rf};
}
