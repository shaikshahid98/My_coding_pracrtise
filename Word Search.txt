class Solution {
public:
    bool exist(vector<vector<char>>& board, string word) {
        for(int i=0;i<board.size();i++)
            for(int j=0;j<board[i].size();j++)
                if(board[i][j]== word[0] && dfs(board, word,0,i,j,board.size(),board[i].size()))
                    return true;
        return false;
        
    }
    bool dfs(vector<vector<char>>& board, string word,int ind,int x,int y,int nx,int ny)
    {
        
        if(ind== word.size() ) return true;
        if( x >= nx|| y >=ny || x<0 || y<0 || board[x][y]!= word[ind] ) return false;
        
        char tmp= board[x][y];
        board[x][y]= ' ';
        //res= true;
        bool found= dfs(board,word,ind+1,x+1,y,nx,ny) || 
        dfs(board,word,ind+1,x-1,y,nx,ny)||
         dfs(board,word,ind+1,x,y+1,nx,ny)||
         dfs(board,word,ind+1,x,y-1,nx,ny);
        board[x][y]=tmp;   
        return found;
        
    }
};