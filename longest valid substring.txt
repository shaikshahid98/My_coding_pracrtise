class Solution {
public:
   
    int longestValidParentheses(string s) {
        int n=s.size();
        if(n==0) return 0;
        stack<int>st;
        for(int i=0;i<n;i++)
        {
            if(s[i]=='(')
                st.push(i);
            else if(!st.empty() && s[st.top()]=='(') st.pop();
            else st.push(i);
        }
        int cnt=0,a=n,b=0;
        if(st.empty()) cnt=n;
        else{
        while(st.size())
        {
            b=st.top();
            st.pop();
            cnt=max(cnt,a-b-1);
            a=b;
        }
           cnt=max(cnt,a);
        }
        return cnt;
    }
};